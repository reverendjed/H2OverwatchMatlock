{"ast":null,"code":"/**\n * Fetches the role of a user from the Firestore database.\n * @param {string} userId - The ID of the user.\n * @returns {Promise<string|null>} - A promise that resolves to the role of the user, or null if the user document does not exist.\n */import{db}from'../firebase-config';import{doc,getDoc}from'firebase/firestore';export async function fetchUserRole(userId){const docRef=doc(db,\"users\",userId);const docSnap=await getDoc(docRef);if(docSnap.exists()){return docSnap.data().role;// Assuming the user document has a 'role' field\n}else{console.log(\"No such document!\");return null;}}","map":{"version":3,"names":["db","doc","getDoc","fetchUserRole","userId","docRef","docSnap","exists","data","role","console","log"],"sources":["/Users/jeffryjones/Desktop/h2overwatch/login/src/services/firebaseService.js"],"sourcesContent":["\n/**\n * Fetches the role of a user from the Firestore database.\n * @param {string} userId - The ID of the user.\n * @returns {Promise<string|null>} - A promise that resolves to the role of the user, or null if the user document does not exist.\n */\nimport { db } from '../firebase-config';\nimport { doc, getDoc } from 'firebase/firestore';\n\nexport async function fetchUserRole(userId) {\n  const docRef = doc(db, \"users\", userId);\n  const docSnap = await getDoc(docRef);\n  if (docSnap.exists()) {\n    return docSnap.data().role; // Assuming the user document has a 'role' field\n  } else {\n    console.log(\"No such document!\");\n    return null;\n  }\n}\n"],"mappings":"AACA;AACA;AACA;AACA;AACA,GACA,OAASA,EAAE,KAAQ,oBAAoB,CACvC,OAASC,GAAG,CAAEC,MAAM,KAAQ,oBAAoB,CAEhD,MAAO,eAAe,CAAAC,aAAaA,CAACC,MAAM,CAAE,CAC1C,KAAM,CAAAC,MAAM,CAAGJ,GAAG,CAACD,EAAE,CAAE,OAAO,CAAEI,MAAM,CAAC,CACvC,KAAM,CAAAE,OAAO,CAAG,KAAM,CAAAJ,MAAM,CAACG,MAAM,CAAC,CACpC,GAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,CAAE,CACpB,MAAO,CAAAD,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,IAAI,CAAE;AAC9B,CAAC,IAAM,CACLC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChC,MAAO,KAAI,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}