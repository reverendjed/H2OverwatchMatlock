{"ast":null,"code":"var _jsxFileName = \"/Users/jeffryjones/Desktop/h2overwatch/login/src/components/UserDashboard.js\";\nimport React, { useState } from 'react';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase-config';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './UserDashboard.css';\nfunction UserDashboard() {\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const navigate = useNavigate();\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      console.log(\"User signed out successfully\");\n      navigate('/');\n    } catch (error) {\n      console.error(\"Error signing out:\", error.message);\n    }\n  };\n  const goToAdminDashboard = () => {\n    navigate('/AdminDashboard');\n  };\n\n  // This function takes a base64-encoded string of the image (or video)\n  const handleVideoUpload = async base64Image => {\n    setIsUploading(true);\n    setUploadMessage('');\n    try {\n      const response = await axios({\n        method: 'POST',\n        url: 'https://detect.roboflow.com/brown-trout-counter/2',\n        // Your endpoint\n        params: {\n          api_key: 'hrHXV6QIsOWhUf9XSJ5F' // Your API key\n        },\n        data: base64Image,\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      console.log(response.data);\n      setUploadMessage('Upload successful! Processing complete.');\n    } catch (error) {\n      // Error handling logic as previously defined\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // This function triggers when a file is selected\n  const handleFileSelect = event => {\n    if (event.target.files.length > 0) {\n      const fileReader = new FileReader();\n      const file = event.target.files[0];\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        const base64 = fileReader.result;\n        // Here, you pass the base64 encoded string to handleVideoUpload\n        handleVideoUpload(base64.split(',')[1]); // Correctly passing the base64-encoded image\n      };\n      fileReader.onerror = error => {\n        console.error('Error: ', error);\n      };\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${process.env.PUBLIC_URL}/h2logo.png`,\n    className: \"App-logo\",\n    alt: \"H2Overwatch Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Welcome to the User Dashboard\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Analytics\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileSelect,\n    accept: \"video/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), isUploading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Uploading and processing video...\"), uploadMessage && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  }, uploadMessage)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Count Fish\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Environmental Data\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Database\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: goToAdminDashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Admin Dashboard\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Log Out\")));\n}\nexport default UserDashboard;","map":{"version":3,"names":["React","useState","signOut","auth","useNavigate","axios","UserDashboard","isUploading","setIsUploading","uploadMessage","setUploadMessage","navigate","handleLogout","console","log","error","message","goToAdminDashboard","handleVideoUpload","base64Image","response","method","url","params","api_key","data","headers","handleFileSelect","event","target","files","length","fileReader","FileReader","file","readAsDataURL","onload","base64","result","split","onerror","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","type","onChange","accept","onClick"],"sources":["/Users/jeffryjones/Desktop/h2overwatch/login/src/components/UserDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase-config';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './UserDashboard.css';\n\nfunction UserDashboard() {\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      console.log(\"User signed out successfully\");\n      navigate('/');\n    } catch (error) {\n      console.error(\"Error signing out:\", error.message);\n    }\n  };\n\n  const goToAdminDashboard = () => {\n    navigate('/AdminDashboard');\n  };\n\n// This function takes a base64-encoded string of the image (or video)\nconst handleVideoUpload = async (base64Image) => {\n  setIsUploading(true);\n  setUploadMessage('');\n  \n  try {\n    const response = await axios({\n      method: 'POST',\n      url: 'https://detect.roboflow.com/brown-trout-counter/2', // Your endpoint\n      params: {\n        api_key: 'hrHXV6QIsOWhUf9XSJ5F', // Your API key\n      },\n      data: base64Image,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n\n    console.log(response.data);\n    setUploadMessage('Upload successful! Processing complete.');\n  } catch (error) {\n    // Error handling logic as previously defined\n  } finally {\n    setIsUploading(false);\n  }\n};\n\n// This function triggers when a file is selected\nconst handleFileSelect = (event) => {\n  if (event.target.files.length > 0) {\n    const fileReader = new FileReader();\n    const file = event.target.files[0];\n    \n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      const base64 = fileReader.result;\n      // Here, you pass the base64 encoded string to handleVideoUpload\n      handleVideoUpload(base64.split(',')[1]); // Correctly passing the base64-encoded image\n    };\n    fileReader.onerror = (error) => {\n      console.error('Error: ', error);\n    };\n  }\n};\n\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <img src={`${process.env.PUBLIC_URL}/h2logo.png`} className=\"App-logo\" alt=\"H2Overwatch Logo\" />\n        <h1>Welcome to the User Dashboard</h1>\n      </div>\n      <div className=\"dashboard-content\">\n        <p>Analytics</p>\n        <input type=\"file\" onChange={handleFileSelect} accept=\"video/*\" />\n        {isUploading && <p>Uploading and processing video...</p>}\n        {uploadMessage && <p>{uploadMessage}</p>}\n      </div>\n      <div className=\"dashboard-menu\">\n        <ul>\n          <li>Count Fish</li>\n          <li>Environmental Data</li>\n          <li>Database</li>\n          <li><button onClick={goToAdminDashboard}>Admin Dashboard</button></li>\n        </ul>\n      </div>\n      <div className=\"dashboard-footer\">\n        <button onClick={handleLogout}>Log Out</button>\n      </div>\n    </div>\n  );\n}\n\nexport default UserDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}